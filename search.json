[{"path":"https://sda030.github.io/readSX/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 readSX authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://sda030.github.io/readSX/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stephan Daus. Author, maintainer.","code":""},{"path":"https://sda030.github.io/readSX/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Daus, S. (2022). Read Survey Data SurveyXact readSX.","code":"@Unpublished{readSX-package,   title = {Read Survey Data from SurveyXact with {readSX}},   author = {{Stephan Daus}},   year = {2022},   address = {Tvetenveien 231, 0675 Oslo},   note = {An R-package developed for researchers and pollsters in the social sciences.},   url = {https://CRAN.R-project.org/package=readSX}, }"},{"path":"https://sda030.github.io/readSX/index.html","id":"readsx","dir":"","previous_headings":"","what":"Read SurveyXact Data","title":"Read SurveyXact Data","text":"goal readSX import survey data collected proprietary service SurveyXact. SurveyXact exports data multiple tables: raw data, variable labels (types), value labels.","code":""},{"path":"https://sda030.github.io/readSX/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Read SurveyXact Data","text":"can install development version readSX like :","code":"install.packages(\"readSX\") library(devtools) devtools::install_github(\"sda030/readSX\")"},{"path":"https://sda030.github.io/readSX/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Read SurveyXact Data","text":"","code":"library(readSX) ex_survey2_xlsx <-       read_surveyxact(filepath =                       system.file(\"extdata\", \"ex_survey2.xlsx\",                       package = \"readSX\", mustWork = TRUE))"},{"path":"https://sda030.github.io/readSX/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Read SurveyXact Data","text":"Fixes legacy bugs SurveyXact data export. Ensures data can read matter data export format (Excel, CSV, ansi/utf8, comma/semicolon-separated). Can read non-ASCII characters correctly - tested Norwegian æøå. version 1.8.2, applies factors labelled values. (prior versions used value labels-system labelled-package, intended Stata/SPSS/SAS can multiple missing value codes). SurveyXact, blanks can used explicit missing, feature redundant confusing. Stick R’s native factor vectors. 1.8.4, contains function ensure uploaded CSV file respondents correct format.","code":""},{"path":"https://sda030.github.io/readSX/index.html","id":"todo","dir":"","previous_headings":"","what":"TODO:","title":"Read SurveyXact Data","text":"Tick boxes get correct label suffix? Automatically fix NA/FALSE ? Get SX fix bug labels header Get SX fix bug Excel-sheets separated dataset(1)(2), etc. Get SX fix bug Structure.csv phantom column end…","code":""},{"path":"https://sda030.github.io/readSX/reference/check_filepath.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks If Filepath is Valid, Optionally Fixes It. — check_filepath","title":"Checks If Filepath is Valid, Optionally Fixes It. — check_filepath","text":"Checks Filepath Valid, Optionally Fixes .","code":""},{"path":"https://sda030.github.io/readSX/reference/check_filepath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks If Filepath is Valid, Optionally Fixes It. — check_filepath","text":"","code":"check_filepath(filepath = filepath)"},{"path":"https://sda030.github.io/readSX/reference/check_filepath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks If Filepath is Valid, Optionally Fixes It. — check_filepath","text":"filepath Character vector filepaths check.","code":""},{"path":"https://sda030.github.io/readSX/reference/check_filepath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks If Filepath is Valid, Optionally Fixes It. — check_filepath","text":"filepath named character vector","code":""},{"path":"https://sda030.github.io/readSX/reference/readSX-package.html","id":null,"dir":"Reference","previous_headings":"","what":"readSX: Read 'SurveyXact' Data — readSX-package","title":"readSX: Read 'SurveyXact' Data — readSX-package","text":"Imports data 'SurveyXact' commercial service https://www.surveyxact.com/, adds variable labels, converts value labels factors order exported 'SurveyXact'.","code":""},{"path":[]},{"path":"https://sda030.github.io/readSX/reference/readSX-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"readSX: Read 'SurveyXact' Data — readSX-package","text":"Maintainer: Stephan Daus stephus.daus@gmail.com (ORCID)","code":""},{"path":"https://sda030.github.io/readSX/reference/read_surveyxact.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Data Generated by SurveyXact — read_surveyxact","title":"Import Data Generated by SurveyXact — read_surveyxact","text":"First export data SurveyXact either Excel set CSV-files European format (semicolon-sep). import using function setting variable labels value labels automatically. Can use labelled-package functions package processing.","code":""},{"path":"https://sda030.github.io/readSX/reference/read_surveyxact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Data Generated by SurveyXact — read_surveyxact","text":"","code":"read_surveyxact(   filepath = c(dataset = \"dataset.csv\", structure = \"structure.csv\", labels =     \"labels.csv\"),   trim_ws = FALSE )"},{"path":"https://sda030.github.io/readSX/reference/read_surveyxact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Data Generated by SurveyXact — read_surveyxact","text":"filepath character string path Excel file, character vector paths dataset.csv, structure.csv labels.csv-files. trim_ws Logical, default FALSE. Whether remove leading ending whitespace files.","code":""},{"path":"https://sda030.github.io/readSX/reference/read_surveyxact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Data Generated by SurveyXact — read_surveyxact","text":"data.frame.","code":""},{"path":"https://sda030.github.io/readSX/reference/read_surveyxact.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import Data Generated by SurveyXact — read_surveyxact","text":"","code":"dataset <- system.file(\"extdata\", \"ex_survey2_tab_utf16\", \"dataset.csv\",   package = \"readSX\", mustWork = TRUE ) labels <- system.file(\"extdata\", \"ex_survey2_tab_utf16\", \"labels.csv\",   package = \"readSX\", mustWork = TRUE ) structure <- system.file(\"extdata\", \"ex_survey2_tab_utf16\", \"structure.csv\",   package = \"readSX\", mustWork = TRUE ) ex_survey2_tab_utf16 <-   read_surveyxact(filepath = c(     dataset = dataset,     labels = labels,     structure = structure   ))"},{"path":"https://sda030.github.io/readSX/reference/write_data_for_sx.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes Data with Respondents in CSV Format Required for SurveyXact Import — write_data_for_sx","title":"Writes Data with Respondents in CSV Format Required for SurveyXact Import — write_data_for_sx","text":"Writes Data Respondents CSV Format Required SurveyXact Import","code":""},{"path":"https://sda030.github.io/readSX/reference/write_data_for_sx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes Data with Respondents in CSV Format Required for SurveyXact Import — write_data_for_sx","text":"","code":"write_data_for_sx(data, filepath, overwrite = FALSE)"},{"path":"https://sda030.github.io/readSX/reference/write_data_for_sx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes Data with Respondents in CSV Format Required for SurveyXact Import — write_data_for_sx","text":"data Data frame (tibble). filepath Filepath string overwrite Whether overwrite existing file (default).","code":""},{"path":"https://sda030.github.io/readSX/reference/write_data_for_sx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Writes Data with Respondents in CSV Format Required for SurveyXact Import — write_data_for_sx","text":"Side-effect: writes file. Returns filepath.","code":""},{"path":"https://sda030.github.io/readSX/reference/write_data_for_sx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Writes Data with Respondents in CSV Format Required for SurveyXact Import — write_data_for_sx","text":"","code":"if (FALSE) write_data_for_sx(mtcars, filepath=\"test.csv\")"},{"path":"https://sda030.github.io/readSX/news/index.html","id":"readsx-084","dir":"Changelog","previous_headings":"","what":"readSX 0.8.4","title":"readSX 0.8.4","text":"Added wrapper function write_data_for_sx() easily importing respondent lists SurveyXact.","code":""},{"path":"https://sda030.github.io/readSX/news/index.html","id":"readsx-083","dir":"Changelog","previous_headings":"","what":"readSX 0.8.3","title":"readSX 0.8.3","text":"CRAN release: 2022-08-23 CRAN release version. Removed dependence labelled-package. Added tests: CSV encodings utf16, ansi, utf8, semicolon comma-separated Fixed bugs named character vector filepaths processed. checks better error messages files found strange formats. Refactored code smaller internal functions. cli-based condition messages rather rlang. Added test coverage associated badges readme","code":""}]
